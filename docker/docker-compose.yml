services:
  db_production:
    image: postgres:15-alpine
    container_name: db_production
    restart: unless-stopped
    environment:
      POSTGRES_USER: vazzuniverse
      POSTGRES_PASSWORD: vazzuniverse
      POSTGRES_DB: vazzuniverse  
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"  
      TZ: Asia/Jakarta
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts/prod-init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - backend-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vazzuniverse -d vazzuniverse"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: 3

  db_development:
    image: postgres:15-alpine
    container_name: db_dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: devuser
      POSTGRES_PASSWORD: devpass
      POSTGRES_DB: myapp_dev
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - pgdev_data:/var/lib/postgresql/data
      - ./init-scripts/dev-init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    networks:
      - backend-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devuser -d myapp_dev"]
      interval: 15s
      timeout: 5s
      retries: 3

  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.prod
    container_name: backend_topup
    ports:
      - "4000:4000"
    depends_on:
      - db_production
    env_file:
      - ../.env.local
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://103.127.98.128:4000/health"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s   
    

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./pg-data/prod  
  pgdev_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./pg-data/dev

networks:
  backend-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1