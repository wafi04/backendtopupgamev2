# Stage 1: Build
FROM node:22-alpine AS builder

WORKDIR /app

COPY package*.json ./
COPY tsconfig.json ./

RUN npm ci

COPY . .

# Run the build
RUN npm run build

# Stage 2: Production
FROM node:22-alpine

WORKDIR /app

ENV NODE_ENV=production

# Copy package files
COPY package*.json ./
COPY tsconfig.json ./

# Configure the tsconfig-paths
RUN echo 'const { resolve } = require("path"); \
module.exports = { \
  baseUrl: resolve(__dirname), \
  paths: { \
    "@/*": ["./dist/*"] \
  } \
}' > tsconfig-paths.config.js

RUN npm install --save tsconfig-paths module-alias

RUN npm ci --omit=dev

COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules/.prisma ./node_modules/.prisma

RUN node -e "try { require('tsconfig-paths'); console.log('tsconfig-paths is installed correctly'); } catch(e) { console.error('tsconfig-paths not found:', e); process.exit(1); }"
RUN node -e "try { require('module-alias'); console.log('module-alias is installed correctly'); } catch(e) { console.error('module-alias not found:', e); process.exit(1); }"

# Update CMD to use the full path to the modules
CMD ["node", "-r", "./node_modules/tsconfig-paths/register", "-r", "./node_modules/module-alias/register", "--require=./tsconfig-paths.config.js", "dist/app.js"]