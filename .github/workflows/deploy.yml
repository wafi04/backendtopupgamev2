name: Backend Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
            
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
              
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test

      - name: Build for production
        run: npm run build
      
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: Add host key to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 103.127.98.128 >> ~/.ssh/known_hosts
      
      - name: Check Node.js version and update if needed
        run: |
          NODE_VERSION=$(ssh vazzuniverse@103.127.98.128 "node -v || echo 'not installed'")
          echo "Current Node.js version: $NODE_VERSION"
          if [[ $NODE_VERSION != *"v18"* && $NODE_VERSION != *"v19"* && $NODE_VERSION != *"v20"* ]]; then
            echo "Node.js 18+ not detected, installing Node.js 20 with NVM"
            ssh vazzuniverse@103.127.98.128 "curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash && export NVM_DIR=\$HOME/.nvm && [ -s \$NVM_DIR/nvm.sh ] && \. \$NVM_DIR/nvm.sh && nvm install 20 && nvm use 20 && nvm alias default 20"
          else
            echo "Node.js version is compatible, skipping installation"
          fi

      - name: Deploy to VPS
        run: |
          scp -r docker/ dist/ package.json package-lock.json prisma/ vazzuniverse@103.127.98.128:~/backend/
          ssh vazzuniverse@103.127.98.128 "cd ~/backend && \
          mkdir -p docker/pg-data/dev docker/pg-data/prod && \
          [[ -d \$HOME/.nvm ]] && export NVM_DIR=\$HOME/.nvm && [ -s \$NVM_DIR/nvm.sh ] && \. \$NVM_DIR/nvm.sh; \
          npm ci --only=production && \
          npx prisma generate && \
          cd docker && docker compose up -d"